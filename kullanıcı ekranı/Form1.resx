<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="buttonimage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uqcwpAAAAABJRU5ErkJggg==
</value>
  </data>
</root>