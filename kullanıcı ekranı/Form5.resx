<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEGcAABBnAa7Q65gAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADY0lEQVR4Xu2bvYsTQRjGI4KNtZ3/iP/AdZeNYhBtBK0ssruHopUg2AVbQayvOi3khIPNnim0sZCz
        ET0QYyPYKVxzacL4PvtxbjbP5mu/Zpkc/C7JO7MzzzPZ7M68u9tSSpXKlvfgouXtbHd817V8p2/59q68
        DoVj4SQC7yUWlPWDurINtmVtFgkN5qV70LvU9tw71sDetwbOqaDWRLa199EW2mR95YUG16G79+SCfHP3
        2gPngwifpIwUwUT2kPfoA30xDetAg6vQUq1zstveEoGjlOAyGaFP9M00rQINLktn0NsSMUcpcVVyBA1M
        27LQ4CKuHfQuW57tE0H1IFqgiWldBA3O4+qhe8XynN9USJ2IJmhjmudBg1m0Pfu2dDae6VwfxtDItGdB
        g2m6e93zcnR/RjrUEmiFZuYlDQ0mQUMdz33DOtIZaF5mEGgwSZO++TTQzjwlocGY6DdPG28Ki44JNAiC
        o73eB7xlGc87O9BgeJ7X8FS3LuIla54wEwBaTXKKQjwxrzOBaHrLG2k4bNqc+iALm3rn9ur64X319PNL
        dXP4iJbn5Ci9gJoagGhVxzashBvvHqqvf3+IFKX8Xx9pndyIx9gvOHuDNbZUqHJJO0XSPP5efHtF6xXA
        KJlPOBsAJBpI5UpIm3/906f1igJepZvpAYgyOXSDMqnaPIBX6er/ACDfJgVlpLHmUof5iEmcYwwGoOM5
        d0mlUqnRfAA8S7fhALR95y2rVBZ1mwfwLF23wrx9vtT1SuhgPuIU3mXau7NNCktBI/Mh4h2nP5cWFox2
        5gV4x+yvzwqLREfzAeJdBsDepYUFoa15IN6xBwxpYQFobR6IdwzAMS0sgC9/vkfWNTQPxDsG4IQW5uTx
        p+eRdU3NA/G+GQDsBrSwAJryEzD9ILg5DZo9EdpMhU1fDBm/HBYNZidE8M/4lJjxSVFgdFoc4GIBq1wF
        VQ8CvEo30wNg/KUxIDMjcy+Ohh8MvzwOjL5BIsboW2SA8TdJAaNvk4sx+kbJGNxuyhpuAtDOPCWhwSTG
        3ywN0FCT9gRoXcY8oMEsomOCeQ9MJAnODjqeIkXTvKN9FjS4iHCeYOhDU0miabN5j80lCRZQ4SrSvAcn
        k2CNjUQDsi0i0JxHZxnItxn38HQWwXUHT9fH51XrHxIxLiDm+h4vAAAAAElFTkSuQmCC
</value>
  </data>
</root>